<template>
    <view class="page uni-bg-white">  
		 <!-- top search start -->
		 <view class="wrapper" style="padding-top: 20rpx;">
		 	<uni-search-bar bgColor="#fff" placeholder="搜索专业" @confirm="search" @input="input" @cancel="cancel" clearButton="none" />
		 </view>	
		 <!-- top search end -->
		 
		<view class="wrapper uni-flex uni-jcenter diploma-box">
			<view v-for="(item,index) in tabBars" :key="item.id" class="uni-inline-item diploma" :class="{'cur':tabIndex==index&&isOpen}" @click="switchTab(index,item.id)">
				<text>{{item.name}}</text><uni-icons type="arrowdown" :color="{'#FFF':tabIndex==index&&isOpen}"></uni-icons>
			</view>
		</view>		
		<view class="wrapper uni-bg-white" v-show="!isOpen">
			<!-- 热门专业 s-->
			<view class="uni-bold-tit"><text>热门专业</text></view>
			<view class="uni-flex popular-box">
				<view v-for="(hot,index) in PopularMajor" :key="hot.id" class="popular">
					<image class="hot-img" src="../../static/60x60.png" mode="widthFix"></image>
				    <text class="popular-title">{{hot.title}}</text>
				</view>
			</view>
			<!-- 热门专业 e-->			
		</view>	
		<scroll-view class="scroll-v wrapper" enableBackToTop="true" scroll-y v-if="isOpen">
			<view v-show="!isSub">
				<view v-for="(newsitem,index2) in newsList[tabIndex].data" :key="newsitem.sid">						
					<view class="uni-bold">{{newsitem.sname}}</view>
					<view class="uni-inline-item major-list">
						<text v-for="(subitem1,subindex1) in newsitem.cinfo" :key="subitem1.cid" v-text="subitem1.cname" :class="{'select':curMajor.includes(subitem1.cid)}" @click="chooseMajor(subitem1.cid)"></text>
					</view>				
				</view>
				<view class="bottom-btn">
					<button class="major-btn" @click="clickBtn(isSub)">下一步</button>
				</view>
			</view>
			<view v-show="isSub">
				<view v-for="(item,index) in majorSubList" :key="item.cid">						
					<view class="uni-bold">{{item.cname}}</view>
					<view class="uni-inline-item major-list">
						<text v-for="(subitem1,subindex1) in item.minfo" :key="subitem1.mid" v-text="subitem1.mname" :class="{'select':curMajor.includes(subitem1.mid)}" @click="chooseMajor(subitem1.mid)"></text>
					</view>				
				</view>
				<view class="bottom-btn uni-inline-item go-search-chool">
					<button class="uni-button-withe"  @click="clearInfo">返回专业大类</button>
					<button class="uni-button-gray"  @click="clickBtn(isSub)">搜索院校</button>
				</view>
			</view>
		</scroll-view>
	</view>
</template>
<script>
	
	import majorApiPaths from'../../util/api/major.js'
	
    export default {		
        data() {
            return {
				searchVal: '',
                newsList: [{
                        data: [],
					              PopularMajor:[]
                  }],
				PopularMajor:[
					{id:'zhexue',title:'哲学'},
					{id:'jisuanji',title:'计算机'},
					{id:'xiguan',title:'信息管理'},
					{id:'jingguan',title:'经济管理'},
					{id:'zhexue',title:'哲学'},
					{id:'jisuanji',title:'计算机'},
					{id:'xiguan',title:'信息管理'},
					{id:'jingguan',title:'经济管理'},
				],
				//本科数据
				undergraduate1:[],
				//专科数据
				undergraduate2:[],
				
				// 顶部tab索引
                tabIndex: 0,
				// 顶部tab数据
                tabBars: [{
                    name: '本科',
                    id: '7'
                },{
                    name: '专科',
                    id: '5'
                }],
				//专业下拉框是否打开
				isOpen:true,
				//专业子类是否打开
				isSub:false,
				//已选择的专业id
				curMajor:[],
				//已选择的三级专业id
				//curMajorSub:[],
				//三级专业数据
				majorSubList:[]
            }
        },        
		onLoad() {
			    
					this.tabBars.forEach((tabBar,index) => {
								if(index!=0){
									this.newsList.push({
												data: [],
												PopularMajor:[]
									});
								}	
					});
					//获取本科专业数据
					this.getMajorCatList(7);
					//获取专科专业数据
					this.getMajorCatList(5);
				
				
				
        },
        methods: {
					//获取专业一二级分类
					async getMajorCatList(type){
						const res = await this.$myRequest({
							url: majorApiPaths.getMajorCatList,
							data:{
								diploma:type
							}
						});
						
						//本科
						if(type==7){
							 console.log(res)
							 this.undergraduate1=res.data
							 //默认选中
							 this.getList(0,7);
						}else{//专科
						   this.undergraduate2=res.data
							 
						}					
					},
					// 根据id获取专业
					async getMajorList(cids){
						const res = await this.$myRequest({
							url: majorApiPaths.getMajorList,
							data:{
								cid:cids
							}
						});
						this.majorSubList=res.data
					},
					
			search(res) {
				uni.showToast({
					title: '搜索：' + res.value,
					icon: 'none'
				})
			},
			input(res) {
				this.searchVal = res.value
			},
			cancel(res) {
				uni.showToast({
					title: '点击取消，输入值为：' + res.value,
					icon: 'none'
				})
			},
			// 获取院校列表
            getList(index,id) {
                let activeTab = this.newsList[index];
								if(id==7){
									activeTab.data = activeTab.data.concat(this.undergraduate1);
								}else if(id==5){
									activeTab.data = activeTab.data.concat(this.undergraduate2);
								}	
            },
			// 跳转到院校详情
            goDetail(e) {
                let detail = {
                	title: e.title,
                	id: e.id
                };
                uni.navigateTo({
                    url: './specialitiesSubList?detailDate=' + encodeURIComponent(JSON.stringify(detail))
                });                
            },
			// tabbar点击切换            
            switchTab(index,id) {
                if (this.newsList[index].data.length === 0) {
                    this.getList(index,id);
                }
            //     if (this.tabIndex === index) {
            //         this.isOpen = !this.isOpen;
					       //    //return
            //     }else{
				       	// this.isOpen = true;
			        	// }
				        this.isSub = false;
								uni.setNavigationBarTitle({
									   title:'选择专业大类'
								})
                this.tabIndex = index;				
                this.clearInfo()
            },			
			//选择专业
			chooseMajor(id){
				if(this.curMajor.includes(id)){
					this.curMajor=this.curMajor.filter(function (ele){return ele != id;});
					console.log(this.curMajor)
				}else{
					this.curMajor.push(id);
				}
				
			},
			clickBtn(isSub){
				var t = this;
				if(t.curMajor.length>0){
					let id = ''
					id = t.curMajor.join(',')
					console.log(id)
					
					const cur_diploma_id=t.tabBars[t.tabIndex].id
					
					
					//搜索院校
					if(isSub){
						
						this.$store.commit({
						      type:'studentBaseInfo/updateState',
									diploma_id:cur_diploma_id										
						})
						
						uni.navigateTo({
							url:'../school/schoolList'
						})
					}else{
						//下一步
						this.getMajorList(id)
						t.isSub = true
						uni.setNavigationBarTitle({
							   title:'选择专业'
						})
						t.curMajor = []
					}					
				}else{
					uni.showToast({
						title:'请选择专业',
						icon:'none'
					})
				}
			},			
			//返回大类，清空已选信息
			clearInfo(){
				var t = this;
				t.isSub = false;
				uni.setNavigationBarTitle({
					   title:'选择专业大类'
				})
				t.curMajor = [];
				//t.curMajorSub = [];
			}
        }
    }
</script>

<style>
    /* #ifndef APP-PLUS */
    page {
        width: 100%;
        min-height: 100%;
        display: flex;
    }
    /* #endif */
	 .popular-box{
		 flex-wrap: wrap;
		 justify-content: space-between;		 
		 padding-bottom: 40rpx;
	 }
	.popular{
		/* #ifndef APP-PLUS */
		display: inline-block;
		/* #endif */
		margin-top: 36rpx;
		width: 47%;
	}
	.hot-img{
		max-width: 100%;
	}
	.diploma-box{padding: 20rpx;border-bottom:2rpx solid #e0e0e0;}
	.diploma{margin: 0 22rpx;padding: 0 30rpx;border: 2rpx solid #000;border-radius: 28rpx;height: 56rpx;}
	.diploma text{padding-right: 6rpx;}
	.cur{border-color: var(--color-primary);background: var(--color-primary); color: #FFF;}
	.scroll-v{background: #F2F2F2;flex: 1; padding-bottom:150rpx; padding-top: 20rpx;}
	.major-list{flex-wrap: wrap;}
	.major-list text{height: 56rpx;line-height: 56rpx;padding: 0 24rpx;  margin-right: 16rpx;margin-bottom: 24rpx;border-radius: 16rpx;border: 2rpx solid var(--color-light-shape);color: #828282;}
	.bottom-btn{position: fixed;bottom: 0;left: 0;right: 0;background: #c4c4cc4;padding: 28rpx;border-top:2rpx solid #e0e0e0; z-index:100; background-color: #F2F2F2;}
	.major-btn{width: 100%; background-color: var(--color-primary);  height: 100rpx; line-height: 100rpx;border-radius: 50rpx;color: #fff; font-size: 38rpx;}
	.major-list text.select{background: var(--color-primary); border-color: var(--color-primary);  color: #fff;}
	.go-search-chool{justify-content: space-between;}
	.go-search-chool button{width: 46%; border-radius: 20rpx;}
</style>
