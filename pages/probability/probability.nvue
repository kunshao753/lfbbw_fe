<template>
	<view class="page">
		<view class="wrapper uni-bg-white">
		
			<tabbar id="tabBar"  class="cur-tab  uni-bg-white"  :tabbars="tabBars" :tabIndex="tabIndex" @click="ontabtap"></tabbar>
			
		
			<swiper :current="tabIndex" class="swiper-box"  :duration="300" @change="ontabchange">
				<swiper-item class="swiper-item" catchtouchmove='catchTouchMove'>
			<scroll-view scroll-y="true" class="scroll">		
		   <view  class="cur-title uni-inline-item uni-jcenter"><text>{{curschoolInfo.name}}</text></view>
			 <view  class="uni-inline-item uni-jcenter ">
				 <uni-icons type="location-filled" size="28" color="#000" class="location-filled"></uni-icons>
				 <text>{{curschoolInfo.province}}</text>
				</view>
				
				<!-- 圆弧进度条 -->
		   <view class="qiun-charts3">
				 <canvas canvas-id="canvasArcbar3" id="canvasArcbar3" class="charts3"></canvas>
				 <button @click="goDetail(curschoolInfo.sch_id)">院校详情</button>
			 </view>
			 
			 <!-- 折线数据 -->
		   <view class="score-info">
				 
				 
				 <scroll-view class="select-chart-info" scroll-x="true" enable-flex="true" show-scrollbar="false">
							<text v-for="(item,index) in scoreInfoData"
							:key="index" 
							@click="scoreInfoClick(item.data,index)" 
							:class="{'select':index==lineChartCurSelectIndex}">
							{{item.name}}
							</text>	
				 </scroll-view>
				 
				 
				 <!-- 折线图 start -->
				  <view class="qiun-columns">
				  		<view class="qiun-charts" >
				  			<canvas canvas-id="canvasLineA" id="canvasLineA" class="chartsLine" disable-scroll=true @touchstart="touchLineA" @touchmove="moveLineA" @touchend="touchEndLineA"></canvas>
				  		</view>
				  	</view>
						<!-- 折线图 end -->
			 </view>
			 </scroll-view>
			 </swiper-item>
			  <swiper-item catchtouchmove='catchTouchMove'>
					  <scroll-view scroll-y="true" class="scroll">	
			       <view class="majors-outers">
							    <view class="item gray"><text>专业10</text><text>录取概率</text></view>
							    <view class="item" v-for="(item,index) in majorsData" @click="openPopup(item)" :key="index"><text>{{item.name}}</text><text class="probability-info">{{item.probability}}%</text></view>													
						 </view>
						 </scroll-view>	
			  </swiper-item>
				
			 </swiper>
			 
		  
			 </view>
				
				
		
		<!-- majorsPopup start -->
		<uni-popup ref="majorsPopup" type="bottom" :animation="true">
			<view class="uni-popup-box  uni-bg-white">
					 <uni-icons type="closeempty"  class="close" @click="closePopup"></uni-icons>
					 <view class="majors-popup-title"><text class="uni-share-title-text">{{curSelectedMajorsData.name}}</text></view>
					<view class="majors-popup-sub-title"><text class="dot">·</text><text>专业招生历年统计</text></view>
					<scroll-view class="majors-popup-content"  scroll-y="true" enable-flex="true" show-scrollbar="false">
						   <view v-if="curSelectedMajorsData.statistics" class="infos">
								 <view class="item gray">
									 <text>年份</text>
									 <text>录取人数</text>
									 <text>最低分</text>
									 <text>最低次位</text>
								</view>
							    <view class="item" v-for="(item,index) in curSelectedMajorsData.statistics" :key="index">
										 <text>{{item.year}}</text>
										 <text>{{item.count}}</text>
										 <text>{{item.lowest_score}}</text>
										 <text>{{item.lowest_order}}</text>
									</view>
									 
							 </view>
					</scroll-view>
					 <view class="majors-popup-button-box">
							<view class="button-item-box left"><button class="uni-share-button reset" @click="checkDetails()">查看专业详情</button></view>
							<view class="button-item-box right"><button class="uni-share-button" @click="addVolunteer()">加为备选志愿</button></view>
					 </view>
				</view>
		</uni-popup>
		<!-- majorsPopup end-->		
				
				
	</view>
</template>

<script>
	import {
		mapState
	} from 'vuex'
	
	import tabbar from '../component/tabbar/tabbar.vue'
	import uCharts from '../../components/u-charts/u-charts.js'
	import schoolApiPaths from './../../util/api/school.js'
	import majorApiPaths from './../../util/api/major.js'
	
	var _self;
	var canvasObj = {};
	const arcbarData={
    "series": [
        {
            "name": "录取概率",
            "data": 0.85,
            "color": "#78B1B7"
        }
    ]
}



	export default {
		data(){
			return{
				// 顶部tab索引
				    tabIndex: 0,
				    // 顶部tab数据
				        tabBars: [{
				            name: '学校录取概率',
				            tag: 'schools'
				        }, {
				            name: '专业录取概率',
				            tag: 'majors'
				        }],
					
				   curschoolInfo:{
						 sch_id:'',
						 name:'',
						 province:''
					 },
					 cWidth3: '', //圆弧进度图
					 cHeight3: '', //圆弧进度图
					 arcbarWidth: '', //圆弧进度图，进度条宽度,此设置可使各端宽度一致
					 tips: '',
					 pixelRatio: 1,
					 serverData: '',
					 
					 
					 cWidth:'',// 折线图
					 cHeight:'',// 折线图
					 
					
					 //折线图数据当前选中索引
					 lineChartCurSelectIndex:0,
					 
					 
					 //圆形进度图数据
					 arcbarData:{
					     "series": [
					         {
					             "name": "录取概率",
					             "data": 0.85,
					             "color": "#78B1B7"
					         }
					     ]
					 },
					 //折线图类型选择数据
					 scoreInfoData:[
						 {
						     name: '历年录取分数',
						     tag: 'score',
								 data:{
										categories: [],
										series: [{
											name: '分数',
											data: [],
											color: '#78B1B7'
										}]
									 }
						 }, {
						     name: '历年录取位次',
						     tag: 'rank',
								 data:{
									categories: [],
									series: [{
										name: '位次',
										data: [],
										color: '#78B1B7'
									}]
								 }
						 }, {
						     name: '历年录取人数',
						     tag: 'count',
								 data:{
										categories: [],
										series: [{
											name: '人数',
											data: [],
											color: '#78B1B7'
										}]
									 }
						 }],
				//专业录取概率
				majorsData:[
					{
						majorsId:"52aedf5b747aec1cfc841591",
						major_enroll_id:"58c7d802f1d8e63428de491d",
						name:'财政学',
						probability:98,
						statistics:[
						// 	{
						// 	year:2020,
						// 	count:2,
						// 	lowest_score:679,
						// 	lowest_order:1220
						// }
						]
					},
					{
						majorsId:2,
						major_enroll_id:'',
						name:'xx学',
						probability:68,
						statistics:[{
							year:2020,
							count:2,
							lowest_score:679,
							lowest_order:1220
						}]	
					},
					{
						majorsId:3,
						major_enroll_id:'',
						name:'财政学',
						probability:98,
						statistics:[]
					},
					{
						majorsId:4,
						major_enroll_id:'',
						name:'xx学',
						probability:68,
						statistics:[]
					}
				],
				//当前选中的专业数据
				curSelectedMajorsData:null,
				//当前页面学校基本公用信息
				schoolData:null,
			}
				
		},
		components:{
			tabbar
		},
		computed: {
			...mapState(['studentBaseInfo','volunteerInfo'])
		},
			onLoad(option) {
				let option_sch_obj
				// 目前在某些平台参数会被主动 decode,暂时这样处理.
				try {
					option_sch_obj = JSON.parse(decodeURIComponent(option.sch_obj))
				} catch (error) {
					option_sch_obj = JSON.parse(option.sch_obj)
				}
				
				//请求院校历年数据信息
				this.schoolData={
					sch_id:option_sch_obj.base_info.sch_id,
					enroll_unit_id:option_sch_obj.enroll_info[1].enroll_unit_id,
					province_id:option_sch_obj.enroll_info[1].stu_province_id,
					wenli:option_sch_obj.enroll_info[1].wenli,
					batch:option_sch_obj.enroll_info[1].batch,
					diploma_id:option_sch_obj.enroll_info[1].diploma_id,
				}
				this.getSchEnrollData(this.schoolData)
				
				//院校详情信息
				this.curschoolInfo.sch_id=option_sch_obj.base_info.sch_id;
			  this.curschoolInfo.name=option_sch_obj.base_info.name;
				this.curschoolInfo.province=option_sch_obj.base_info.province;
				
				
				
				
				 console.log(option.showTab);
				 if(option.showTab){
				    this.tabIndex=this.tabBars.findIndex(item=>item.tag == option.showTab)
				 }
				
					// uCharts
					_self = this;
					//#ifdef MP-ALIPAY
					uni.getSystemInfo({
						success: function(res) {
							if (res.pixelRatio > 1) {
								//正常这里给2就行，如果pixelRatio=3性能会降低一点
								//_self.pixelRatio =res.pixelRatio;
								_self.pixelRatio = 2;
							}
						}
					});
					//#endif
					
					this.cWidth3 = uni.upx2px(400);
					this.cHeight3 = uni.upx2px(400);
					this.arcbarWidth = uni.upx2px(24);
					
					
					const info=uni.getSystemInfoSync();
					console.log(info.windowWidth)
					this.cWidth = info.windowWidth;
					console.log(this.cWidth)
					this.cHeight = uni.upx2px(400);
					
					
				},
				onReady() {
					this.getServerData();
				},
			
			methods:{
				 //解决uchart vue报toJSON错bug
				  toJSON(){
						return this
					},
				   //接口获取学校详情
				   async getSchEnrollData(dataObj){
				   	const res = await this.$myRequest({
				   		url: schoolApiPaths.getSchEnrollData,
				   		data:dataObj
				   	})
				   	
				   	console.log(res)
						
					  const formatRes={
							 score:[],
							 rank:[],
							 count:[],
							 years:[]
						};
						res.data.forEach((item,index)=>{
									 formatRes.years.push(item.academic_year)
									 formatRes.score.push(item.min_score)
									 formatRes.rank.push(item.min_score_rank)
									 formatRes.count.push(item.admission_count) 
						})
	
						this.scoreInfoData.map((item,index)=>{
							 switch(item.tag){
								 case 'score':{
									 item.data.categories=formatRes.years
									 item.data.series[0].data=formatRes.score
									 break;
								 }
								 case 'rank':{
								 			item.data.categories=formatRes.years
								 			item.data.series[0].data=formatRes.rank
								 			break;
								 }
								 case 'count':{
								 			item.data.categories=formatRes.years
								 			item.data.series[0].data=formatRes.count
								 			break;
								 }
							 }
						})
						this.fillLineData(this.scoreInfoData)
										
				   },
				  //接口获取专业历年录取信息
				  async getMajorEnrollData(dataObj){
				  	const res = await this.$myRequest({
				  		url: majorApiPaths.getMajorEnrollData,
				  		data:dataObj
				  	})
				  	
				  	console.log(res)
						return res;
				  										
				  },
				
				     // tabbar点击切换
				      ontabtap(index) {				
				          this.switchTab(index);
				      },
				      ontabchange(e) {
				          let index = e.target.current || e.detail.current;
				          this.switchTab(index);
				      },
				      switchTab(index) {
								console.log(index)
								this.$refs.majorsPopup.close()
								if (this.tabIndex === index) {
								    return;
								}
								
								
								this.tabIndex = index;
								uni.pageScrollTo({
									scrollTop:0,
									duration:0
								})
								
							},
							clearTabData(e) {
							    
							},
							// 阻止swiper用户手动滑动
							  catchTouchMove:function(res){
							    return false
							  },
							//获取进度条数据
							getServerData() {
								this.fillArcbarData();
							},
							
							fillArcbarData(data){
								let Arcbar3 = {
									series: []
								};
								Arcbar3.series = this.arcbarData.series;
								this.showArcbar3("canvasArcbar3", Arcbar3);
							},
							
							fillLineData(curScoreInfoData) {
								let LineA = {
									categories: [],
									series: []
								};
												
								LineA.categories = curScoreInfoData[0].data.categories;
								LineA.series =  curScoreInfoData[0].data.series;
													
								this.showLineA("canvasLineA", LineA);
			      	},
							//圆弧进度条
							showArcbar3(canvasId, chartData) {
								new uCharts({
									$this: _self,
									canvasId: canvasId,
									type: 'arcbar',
									fontSize: 11,
									title: {
										name: Math.round(chartData.series[0].data * 100) + '%',
										color: '#78B1B7',
										fontSize: 40 * _self.pixelRatio,
										offsetY:-20* _self.pixelRatio,
									},
									subtitle: {
										name: chartData.series[0].name,
										color: '#ccc',
										fontSize: 12 * _self.pixelRatio,
										offsetY:-20* _self.pixelRatio,
									},
									extra: {
										arcbar: {
											type: 'circle', //整圆类型进度条图
											width: _self.arcbarWidth * _self.pixelRatio,//圆弧的宽度
											startAngle: 1 ,//整圆类型只需配置起始角度即可
										}
									},
									background: '#FFFFFF',
									pixelRatio: _self.pixelRatio,
									series: chartData.series,
									animation: true,
									width: _self.cWidth3 * _self.pixelRatio,
									height: _self.cHeight3 * _self.pixelRatio,
									dataLabel: true,
								});
							
							},
							//显示折线图
							showLineA(canvasId, chartData) {
								canvasObj[canvasId] = new uCharts({
									$this: _self,
									canvasId: canvasId,
									type: 'line',
									fontSize: 11,
									padding:[15,15,0,15],
									legend:{
										show:false,
										padding:5,
										lineHeight:11,
										margin:5,
									},
									dataLabel: false,
									dataPointShape: false,
									pixelRatio: _self.pixelRatio,
									categories: chartData.categories,
									series: chartData.series,
									animation: true,
									duration:300,
									enableScroll: true, //开启图表拖拽功能
									xAxis: {
										disableGrid: true,
										type: 'grid',
										gridType: 'dash',
										itemCount: 5, 
										//scrollShow: true, 
										scrollAlign: 'left',
										calibration:false,
										
										//scrollBackgroundColor:'#F7F7FF',//可不填写，配合enableScroll图表拖拽功能使用，X轴滚动条背景颜色,默认为 #EFEBEF
										//scrollColor:'#DEE7F7',//可不填写，配合enableScroll图表拖拽功能使用，X轴滚动条颜色,默认为 #A6A6A6
									},
									yAxis: {
										disabled:true,
										disableGrid: true,
										gridType: 'dash',
										//splitNumber: 8,
										//min: 10,
										//max: 180,
										// format: (val) => {
										// 	return val.toFixed(0) + '元'
										// } //如不写此方法，Y轴刻度默认保留两位小数
									},
									width: _self.cWidth * _self.pixelRatio,
									height: _self.cHeight * _self.pixelRatio,
									dataLabel: true,
									dataPointShape: true,
									extra: {
										lineStyle: 'straight'
									},
								});
							
							},
							touchLineA(e) {
								canvasObj['canvasLineA'].scrollStart(e);
							},
							moveLineA(e) {
								canvasObj['canvasLineA'].scroll(e);
							},
							touchEndLineA(e) {
								canvasObj['canvasLineA'].scrollEnd(e);
								//下面是toolTip事件，如果滚动后不需要显示，可不填写
								canvasObj['canvasLineA'].showToolTip(e, {
									format: function(item, category) {
										return category + ' ' + item.name + ':' + item.data
									}
								});
							},
							// 跳转到院校详情
							goDetail(id) {
								
							          uni.navigateTo({
							              url: './../school/schoolDetail?school_id='+id
							          });
							          
							}, 
							//折线图数据切换点击事件
							scoreInfoClick(data,index){
								console.log(data);
								this.lineChartCurSelectIndex=index;
								this.showLineA("canvasLineA", data);
								
							},
							//popup相关事件
							openPopup(obj){
								 let curdata=obj;
								 let curMajorData=this.schoolData;
								 curMajorData.major_enroll_id=obj.major_enroll_id
								 curMajorData.major_id=obj.majorsId
							
								
								this.getMajorEnrollData(curMajorData).then((res)=>{
									 if(res.data.length>0){
										   obj.statistics=[];
										   res.data.map((item,index)=>{				 
										   					 obj.statistics.push({
										   										year:item.academic_year,
										   										count:item.admission_count,
										   										lowest_score:item.min_score,
										   										lowest_order:item.min_score_rank
										   								})
										   })
											 this.$refs.majorsPopup.open()
											 this.curSelectedMajorsData=obj
									 }else{
										  uni.showToast({
										  	title:'此专业暂无相关数据',
										  	icon:'none'
										  })
									 }
								 })
								 
								 
								 
							},
							closePopup(){
								this.$refs.majorsPopup.close()
							},
							//查看专业详情
							checkDetails(){
								uni.showToast({
									title:'查看专业详情',
									icon:'none'
								})
								
							},
							//加为备选志愿
							addVolunteer(){
								
								 let volunteerInfoArr=this.volunteerInfo.volunteerIds;
								 volunteerInfoArr.push('2')
								 this.$store.commit({
								 	      type:'volunteerInfo/updateState',
								 				volunteerIds:volunteerInfoArr,														
								 	})
								 console.log("volunteerIds:"+this.volunteerInfo.volunteerIds,this.volunteerInfo.volunteerIds.length)
								 
								 
								uni.showToast({
									title:'添加成功',
									icon:'none'
								})
								
							},
			}
		
		
	}
</script>

<style>
	 .cur-tab{position: fixed;left: 0;top: 0;right: 0; z-index:999;padding: 0 20rpx;  padding-bottom: 8rpx;}
	 .cur-tab .uni-tab-item {margin-left: 60rpx; margin-right: 60rpx;flex-grow:1;}
	 .cur-title{font-size: 38rpx;margin-top: 20rpx;}
	 .sd-addressicon{width: 60rpx;height: 60rpx;}
	 /* 圆弧进度样式 */
	 .qiun-charts3 {
		position:relative;
	 	height: 400rpx;
	 	background-color: #FFFFFF;
	  margin-top: 20rpx;
	  margin-bottom: 60rpx;
	 }
	 .qiun-charts3 button{position: absolute;
	     left:50%;
			 transform: translateX(-50%);
			 bottom: 88rpx;
	     height: 60rpx;
	     line-height: 60rpx;
	     font-size: 28rpx; 
			 color: #FFF;
			 background-color: var(--color-primary);
		}
	 .charts3 {
	 	margin: 0 auto;
	 	width: 400rpx;
	 	height: 400rpx;
	 	background-color: #FFFFFF;
	 }
	 
	 .qiun-charts{ margin-bottom: 100rpx;}
	 .chartsLine{height: 400rpx; width: 100%;}
	 
	 .score-info{border-top:1px solid #ccc; }
	 .select-chart-info{ height: 60rpx; margin-bottom: 48rpx; margin-top: 24rpx; flex-direction: row;}
	 .select-chart-info text{ background: #eee;height: 60rpx;line-height: 60rpx;padding: 0 24rpx;margin-right: 24rpx;border-radius: 16rpx; text-align: center; flex: 1 0 auto;}
	 .select-chart-info text:last-of-type{ margin-right: 0; }
	 .select-chart-info text.select{color: #fff; background: var(--color-primary);}
	 
	 .swiper-box{min-height: 100vh;}
	 .scroll{
	         height: 100%;margin-top: 58rpx;
	 }
	 
	 .majors-outers >  .item{ flex-direction: row; justify-content: space-between; height: 100rpx; line-height: 100rpx; border-bottom:1px solid #ccc;}
	  .majors-outers {margin-bottom: 200rpx;}
	  .majors-outers >  .item.gray{color: #828282; border-bottom:none; line-height: 50rpx; height: 50rpx; margin-top: 34rpx;}
		
		.probability-info{color: var(--color-primary);}
		
		
		.majors-popup-title{font-size: 36rpx;text-align: center; margin-bottom: 30rpx;}
		.majors-popup-content{ max-height:60vh; }
		.infos{margin-bottom: 20rpx;}
		.infos > .item{ flex-direction: row; justify-content: space-between; height: 80rpx; line-height: 80rpx; }
		.infos > .item.gray{color: #828282;}
		.majors-popup-button-box{border-top: 1rpx solid #ccc;justify-content: space-between; flex-flow: row;height: 148rpx;
        align-items: center;}
		.majors-popup-button-box .uni-share-button{font-size: 30rpx; color: #fff; background-color: #c4c4c4;    height: 80rpx;
		  line-height: 80rpx;
		  width: 320rpx;}
		.majors-popup-button-box .uni-share-button.reset{ background: #fff;color: #000; border:1rpx solid #BDBDBD ;}
		.majors-popup-sub-title{flex-direction: row;justify-content: flex-start;align-items: center;line-height: 40rpx;}
		.dot{ font-size: 44rpx; color: #c4c4c4; padding-right: 10rpx;}
</style>
